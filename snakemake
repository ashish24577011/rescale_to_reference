import pandas as pd

# Load metadata
run_data = pd.read_csv("data/run_metadata.tsv", sep="\t", header=0)
sample_data = pd.read_csv("data/sample.tsv", sep="\t", header=0)

# Set indices
run_data.set_index("run", inplace=True)
sample_data.set_index("sample", inplace=True)

# Function to retrieve file paths for a given sample
def get_sample_run_paths(wildcards):
    run_ids = sample_data.loc[wildcards.sample, "runs"].split(",")
    return [run_data.loc[run_id, "file_path"] for run_id in run_ids]

# Define Snakemake rules
rule frequency:
    input:
        run_paths=lambda wildcards: get_sample_run_paths(wildcards)
    output:
        freq_file="generated_{sample}/frequency_{sample}.tsv",
        merged_file="generated_{sample}/merged_file_{sample}.tsv"
    shell:
        "sh scripts/freq.sh \"{input.run_paths}\" \"{output.merged_file}\" \"{output.freq_file}\""

rule extract:
    input:
        freq_file="generated_{sample}/frequency_{sample}.tsv",
        merged_file="generated_{sample}/merged_file_{sample}.tsv"
    output:
        extracted_file="generated_{sample}/extracted_{sample}.tsv"
    shell:
        "python scripts/extraction.py \"{input.freq_file}\" \"{input.merged_file}\" \"{output.extracted_file}\""

rule plot:
    input:
        extracted_file="generated_{sample}/extracted_{sample}.tsv"
    output:
        plot_file="generated_{sample}/comparison_graph_{sample}.png"
    shell:
        "python scripts/graph.py \"{input.extracted_file}\" \"{output.plot_file}\""

